
参看：
http://q.cnblogs.com/q/71288/ 

1. “客服在业务后台审核订单”，这个是一个用例，客服是系统的使用者，也是行为的驱动者；
2. 所有用例都是对应到DDD中的应用层；所以，我们可以在应用层设计一个AuditOrder的方法，这个方法对应上面的user case；
3. AuditOrder方法内，通知Order聚合根做审核订单的业务逻辑；与其说是审核订单，不如说是通知订单将自己的状态变为已审核；因为审核订单的说法，这个行为的触发者应该是系统中的某个账号，账号审核订单，才是合理的；所以当我们调用order.Audit()时，实际上是账号在通知order将自己的状态变为已审核；再比如order.Close()，也是一样的道理，是账号通知订单关闭自己；order的一切行为只关心对自己如何操作；order.Audit(), order.Close()这些行为都是订单允许外部使用的一些操作行为；然后应用层(app layer)会调用领域层订单的这些方法，完成整个用例场景；
4. 关于假如订单是由某个定时job自动触发审核动作的，那此时，order.Audit()的触发者就是这个job了。job通知订单将自己的状态变为已审核与账号通知订单的状态变为已审核，这是两个不同的业务用例场景(user case)，但对领域来说都是一样的，因为最后都是通知订单将自己的状态变为已审核；
5. 关于operator.Audit(order)这样的思路，完全是以用户为中心的思路了，不是DDD的做法（大部分人都会犯这样的错误）。这种思路是把应用层的行为等同于人的行为了；人是系统的使用者，user case的触发者；AuditOrder是一个user case，operation最多是这个泳衣的参与者。所以，正确的做法是：order app service里，有一个AuditOrder的面向用例的方法，方法内部，调用order.Audit()领域方法；


恩。order.Audit()是订单的职责，operator.Audit(order)偏向用例
杭州-汤雪华 2015/4/17 9:38:24
我加了一点，呵呵
杭州-汤雪华 2015/4/17 9:39:13
order.Audit()
orderAppService.AuditOrder(orderId)
杭州-汤雪华 2015/4/17 9:39:19
这两者的区别，体会一下吧
杭州-汤雪华
order.Audit()表示订单将自己标记为已审核，然后在AuditOrder方法内调用order.Audit()，就表示应用层的AuditOrder方法通知订单将自己标记为已审核。
杭州-汤雪华 2015/4/17 9:40:47
而谁去调用orderAppService.AuditOrder(orderId)？就是用户了
杭州-汤雪华 2015/4/17 9:40:59
用户是系统行为的使用人
北京 - younghan 2015/4/17 9:41:27
ddd最大的好处感觉就是domain封装的好，一旦需求变化，只是app layer变动的多
杭州-汤雪华 2015/4/17 9:41:28
用户传达请求给controller，然后controller调用orderAppService.AuditOrder(orderId)
杭州-汤雪华 2015/4/17 9:41:54
这样表达的意思就是用户使用了系统的AuditOrder功能

杭州-汤雪华 2015/4/17 9:42:41
如果是job触发了这个功能，那可以把job理解为和用户等价的东西，或者理解为是一个机器人，呵呵。
杭州-汤雪华 2015/4/17 9:43:09
customer.AddOrder(order);这种方式就是以用户为中心了
苏州-乞丐 2015/4/17 9:43:25
operator.Audit(order) 这种方式可读性更强, 
杭州-汤雪华 2015/4/17 9:43:36
那说明你还没理解DDD
苏州-乞丐 2015/4/17 9:42:59
customer是一个接口->IAddOrdersToCustomer
上海-Aigis 2015/4/17 9:43:06
orderAppService.AuditOrder(order) 也是等价的吧
杭州-汤雪华 2015/4/17 9:43:09
customer.AddOrder(order);这种方式就是以用户为中心了
北京-胡杨 2015/4/17 9:43:10
第几页这是
杭州-汤雪华 2015/4/17 9:43:15
完全错误
苏州-乞丐 2015/4/17 9:43:25
operator.Audit(order) 这种方式可读性更强, 
杭州-汤雪华 2015/4/17 9:43:36
那说明你还没理解DDD
新疆-Osborn 2015/4/17 9:43:45
我觉得用户和job是不同的actot.他们是同一个用立德的使用者
苏州-乞丐 2015/4/17 9:43:50
而且, 这样的操作也可以委派给order自己去改变状态
新疆-Osborn 2015/4/17 9:44:18
所以都要调应用层
9:45:34
苏州-乞丐 2015/4/17 9:45:34
汤哥你的做法是最简单的也是正确的处理方式,  但是, 不能说operator.Audit(order) 的做法是完全错误的
杭州-汤雪华 2015/4/17 9:45:45
如果 你operator.Audit(order) 这样实现
杭州-汤雪华 2015/4/17 9:46:05
那如果由job自动触发的时候，你是不是要写为：job.Audit(order) 
杭州-汤雪华 2015/4/17 9:46:13
这样你还觉得自然吗
苏州-乞丐 2015/4/17 9:46:33
operator是一个接口
杭州-汤雪华 2015/4/17 9:46:40
审核订单是一个user case，是一个系统功能；
苏州-乞丐 2015/4/17 9:46:50
IAuditOrder的接口
苏州-乞丐 2015/4/17 9:46:55
有不同的对象扮演这个角色
杭州-汤雪华 2015/4/17 9:46:56
就是要在应用层设计出对应的应用层行为
杭州-汤雪华 2015/4/17 9:47:06
和接口有啥关系
苏州-乞丐 2015/4/17 9:47:20
这里了有两种实现, 一种是Operator一种是Job
北京 - younghan 2015/4/17 9:47:26
他是想用多态
9:47:50
杭州-汤雪华 2015/4/17 9:47:50
那你的接口名是什么？
北京 - younghan 2015/4/17 9:48:03
这其实就是多边型架构的特点了
苏州-乞丐 2015/4/17 9:48:38
IDDD第五章 实体 176 : 角色和职责, 可以再读一下,可能对解释这个问题会有不同的理解.
杭州-汤雪华 2015/4/17 9:48:52
我不认为IDDD里的理解是正确的
苏州-乞丐 2015/4/17 9:49:39
个人认为从DDD的角度更应该设计成operator.Audit(order)这样的
杭州-汤雪华 2015/4/17 9:49:48
不同的场景，那触发领域行为的角色是不同的
9:50:09
杭州-汤雪华 2015/4/17 9:50:09
你把用户和job，本身就是两个角色，你怎么抽象为一个统一的角色接口？
苏州-乞丐 2015/4/17 9:50:20
因为, 把领域的概念表达出来了
杭州-汤雪华 2015/4/17 9:50:22
operator太抽象了
杭州-汤雪华 2015/4/17 9:50:45
相比之下，用orderAppService.AuditOrder(orderId)我认为更合理
苏州-乞丐 2015/4/17 9:50:54
接口叫IAuditOrder呢?
杭州-汤雪华 2015/4/17 9:51:05
这个不是领域行为
杭州-汤雪华 2015/4/17 9:51:07
而是系统行为
杭州-汤雪华 2015/4/17 9:51:24
只有order.Audit才是领域行为
杭州-汤雪华 2015/4/17 9:51:44
IAuditOrder就更不对了
苏州-乞丐 2015/4/17 9:51:44
你的这个应用层的接口也需要的, 只是在应用层里面用operator.Audit(order)这样的方式我觉得更好, 更有可读性一点..
杭州-汤雪华 2015/4/17 9:51:54
叫IOrderAuditor还差不多
9:52:13
杭州-汤雪华 2015/4/17 9:52:13
你应用层里面调用operator.Audit(order)？
杭州-汤雪华 2015/4/17 9:52:23
那你在哪里调用order.Audit()?
苏州-乞丐 2015/4/17 9:52:26
说实话, 我现在也是跟你一样出来这些问题的, 但是, operator.Audit(order)这样的方式给了我另外一种思考和建模的方式... 
苏州-乞丐 2015/4/17 9:52:52
operator.Audit 可以委托给order.Audit
杭州-汤雪华 2015/4/17 9:52:52
你这种是DCI的思路，在我看来完全是多余的
杭州-汤雪华 2015/4/17 9:53:02
角色是通过名称表达的我认为。
苏州-乞丐 2015/4/17 9:53:13
op.audit里面可以做其它事情
杭州-汤雪华 2015/4/17 9:53:40
你在operator.Audit(order)里调用order.Audit()吗？
苏州-乞丐 2015/4/17 9:54:07
嗯, 我是这样想的.. 不妥?
9:54:21
杭州-汤雪华 2015/4/17 9:54:21
那你应用层的方法叫什么？
杭州-汤雪华 2015/4/17 9:54:31
那你没看过 经典DDD吗？
杭州-汤雪华 2015/4/17 9:54:49
经典DDD中难道不是在应用层里调用order.Audit()吗？





